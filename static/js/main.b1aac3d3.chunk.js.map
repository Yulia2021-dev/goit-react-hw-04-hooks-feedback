{"version":3,"sources":["components/section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/notification/Notification.jsx","components/statistics/Statistics.jsx","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","s","buttons","map","option","i","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","expr","isNaN","Math","floor","console","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIC,UAAU,QAAd,SAAuBF,IACrBC,M,gBCwBOE,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAAC,EAAD,CAASL,MAAM,wBAAwBE,UAAU,QAAjD,SACE,qBAAKA,UAAWI,IAAEC,QAAlB,SAEIH,EAAQI,KAAI,SAACC,EAAQC,GAAT,OACV,wBACER,UAAU,SACVS,KAAK,SACLC,QAAS,kBAAMP,EAAgBI,IAHjC,SAIGA,GAJUC,WCDVG,G,MARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGZ,UAAU,qBAAb,SAAmCY,M,gBCgCtBC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,cAAC,EAAD,CAASpB,MAAM,aAAf,SACImB,EAGA,qBAAKjB,UAAWI,IAAES,WAAlB,SACE,qBAAIb,UAAU,aAAd,UACE,qBAAIA,UAAU,mBAAd,mBAAwCc,KACxC,qBAAId,UAAU,mBAAd,sBAA2Ce,KAC3C,qBAAIf,UAAU,mBAAd,kBAAuCgB,KACvC,qBAAIhB,UAAU,mBAAd,oBAAyCiB,KACzC,qBAAIjB,UAAU,mBAAd,uBACakB,EADb,YARJ,cAAC,EAAD,CAAcN,QAAQ,yB,MCHf,SAASO,IACtB,MAAwBC,mBAHJ,GAGpB,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAJV,GAIpB,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBALF,GAKpB,mBAAOJ,EAAP,KAAYO,EAAZ,KAkBMN,EAAQH,EAAOC,EAAUC,EAC3BQ,EAAOV,EAAOG,EACdQ,MAAMD,KACRA,EAAO,GAET,IAAMN,EAAqBQ,KAAKC,MAAa,IAAPH,GAEtC,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,CAAiBE,QAHL,CAAC,OAAQ,UAAW,OAGGC,gBAzBf,SAACI,GACvB,OAAQA,GACN,IAAK,OACHc,EAAQP,EAAO,GACf,MACF,IAAK,UACHQ,EAAWP,EAAU,GACrB,MACF,IAAK,MACHQ,EAAOP,EAAM,GACb,MACF,QACEY,QAAQC,MAAM,yBAchB,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,OCvC5BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b1aac3d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className=\"title\">{title}</h2>\r\n      { children }\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Section;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Section from '../section/Section'\r\n\r\nimport s from './feedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <Section title=\"Please leave feedback\" className=\"title\">\r\n      <div className={s.buttons}>\r\n        {\r\n          options.map((option, i) => (\r\n            <button key={i}\r\n              className=\"button\"\r\n              type=\"button\"\r\n              onClick={() => onLeaveFeedback(option)}>\r\n              {option}\r\n            </button>)\r\n          )\r\n        }\r\n      </div>\r\n    </Section>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './notification.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className=\"notification-title\">{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"../section/Section\";\r\nimport Notification from \"../notification/Notification\";\r\n\r\nimport s from \"./statistics.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <Section title=\"Statistics\">\r\n      {!total ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <div className={s.Statistics}>\r\n          <ul className=\"param-list\">\r\n            <li className=\"Statistics__item\">Good: {good}</li>\r\n            <li className=\"Statistics__item\">Neutral: {neutral}</li>\r\n            <li className=\"Statistics__item\">Bad: {bad}</li>\r\n            <li className=\"Statistics__item\">Total: {total}</li>\r\n            <li className=\"Statistics__item\">\r\n              Positive: {positivePercentage}%\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions.jsx\";\nimport Statistics from \"./components/statistics/Statistics.jsx\";\n\nimport \"./App.css\";\n\nconst initialRating = 0;\n\nexport default function App() {\n  const [good, setGood] = useState(initialRating);\n  const [neutral, setNeutral] = useState(initialRating);\n  const [bad, setBad] = useState(initialRating);\n\n  const incrementOption = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n      default:\n        console.error(\"No matched option\");\n    }\n  };\n\n  const total = good + neutral + bad;\n  let expr = good / total;\n  if (isNaN(expr)) {\n    expr = 0;\n  }\n  const positivePercentage = Math.floor(expr * 100);\n  const options = [\"good\", \"neutral\", \"bad\"];\n  return (\n    <div className=\"App\">\n      <FeedbackOptions options={options} onLeaveFeedback={incrementOption} />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={total}\n        positivePercentage={positivePercentage}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}